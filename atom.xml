<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[VJia - Software Development]]></title>
  <link href="http://icersummer.github.io/atom.xml" rel="self"/>
  <link href="http://icersummer.github.io/"/>
  <updated>2014-05-22T02:20:36-07:00</updated>
  <id>http://icersummer.github.io/</id>
  <author>
    <name><![CDATA[Vincent J]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Solr Tutorial]]></title>
    <link href="http://icersummer.github.io/blog/2014/05/22/solr-tutorial/"/>
    <updated>2014-05-22T18:15:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/05/22/solr-tutorial</id>
    <content type="html"><![CDATA[<h1>Solr Tutorial</h1>

<p>The origin site is this blog: <a href="http://kevindoran1.blogspot.com/2013/02/solr-tutorial.html">Solr Tutorial</a></p>

<h2>Solr Tutorial</h2>

<p>I recently had the need to search a large amount of online auction data. I had access to the data associated with a large number of online auctions, similar to auctions on eBay. I needed to quickly find auctions whose title and description match a given set of search terms. My solution was to use <a href="http://en.wikipedia.org/wiki/Apache_Solr">Solr</a>, an open source search application/platform.  This post describes the steps I carried out to set-up Solr, and the difficulties encountered along the way. The post covers Solr 4.6.</p>

<p>The decision to use Solr was based on the need for a fast and customisable mechanism to search for auctions. Initially, MySQL&rsquo;s <a href="http://dev.mysql.com/doc/refman/5.0/en/fulltext-search.html">fulltext search</a> was used. This was slow, inflexible and had a number of issues such as not recognising numbers or common words.</p>

<h3>Overview of SOlr Operation</h3>

<p>Solr behaves in many ways like a web server such as Apache: once started, Solr uses the data in its installation directory to serve responses to client requests. The major difference is that Solr is serving search results (in XML, JSON or other formats) as opposed to web pages. The Solr installation is completely standalone: the Solr directory contains everything needed to start and run the server, including a Java Servlet container and all the application data. Solr is controlled using configuration files. Four files in particular play an important role:<strong>solr.xml, solrconfig.xml, schema.xml</strong> and <strong>solr-data-config.xml</strong> [schema.xml and solr-data-config.xml can have custom names].</p>

<h3>Starting Solr</h3>

<p>To start Solr in its default state, navigate to:</p>

<pre><code>**apache-solr-X.X.X/example/**
</code></pre>

<p>and run:</p>

<pre><code>**java -jar start.jar **
</code></pre>

<p>This starts up the server and sets Solr to use the default home directory, <em>./solr</em>.</p>

<p>When making your own Solr instance, it is a good idea to start by copying the default Solr directory, name it as you wish, and start working with this new Solr instance. Assuming I call my Solr directory <code>AuctionSearch</code>, to start Solr after making the new directory, run:
java -jar start.jar -Dsolr.solr.home=AuctionSearch  After running this command, you can browse to <a href="http://localhost:8983/solr/">http://localhost:8983/solr/</a> to view the administration user interface. The default Solr instance doesn&rsquo;t have any documents indexed (or it might have just one), so there wont be much to tinker with until more documents are added. Before adding documents, however, some configuration will probably be needed.</p>

<h3>Configuring Solr</h3>

<p>Configuring Solr is not typically done once- instead a cycle of configuring and testing is carried out. Even months after I initially set up Solr to work for my application, I am still tweaking it as I learn more about Solr and learn more about my data. Despite this cyclic nature, the configuration of Solr will be described here in a linear fashion. However, jumping between sections is encouraged. In turn, the following will be discussed:</p>

<pre><code>- solr.xml Solr cores
- schema.xml Document structure
- solrconfig.xml Request handlers
</code></pre>

<p>When configuring Solr, it is helpful to have a picture of the Solr home directory structure, and to know where all the configuration files are located. The image below shows important configuration files within the example Solr directory.
<img src="http://2.bp.blogspot.com/-zWmWPHKrmYA/URBOUoCYOLI/AAAAAAAAA8M/px33YlR5gCg/s1600/croppedLargeFontSolrDirectoryStructure.jpg" alt="Solr Home Directory Structure" /></p>

<h3>SOlr Cores</h3>

<p>A Solr core manages a single <em>index</em>. An index is the set of all data used to store information about documents to be searched. Each index can have only one document schema associated with it (only one document format can be stored). Using multiple cores allows a single Solr instance (single server, single administration web page) to manage multiple indexes. A use case (context: auction website) for this might be having one core for indexing auction data and another for indexing information on users. Each core will have its own core directory. Cores are configured in <em>solr.xml</em>. An example solr.xml:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- persistent=&quot;true&quot; allows the web interface to make lasting changes to Solr. --&gt;</span>
</span><span class='line'><span class="nt">&lt;solr</span> <span class="na">persistent=</span><span class="s">&quot;true&quot;</span> <span class="na">sharedlib=</span><span class="s">&quot;lib&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;cores</span> <span class="na">adminpath=</span><span class="s">&quot;/admin/cores&quot;</span> <span class="na">host=</span><span class="s">&quot;${host:}&quot;</span> <span class="na">hostcontext=</span><span class="s">&quot;${hostContext:}&quot;</span> <span class="na">hostport=</span><span class="s">&quot;${jetty.port:}&quot;</span> <span class="na">zkclienttimeout=</span><span class="s">&quot;${zkClientTimeout:15000}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;core</span> <span class="na">default=</span><span class="s">&quot;true&quot;</span> <span class="na">instancedir=</span><span class="s">&quot;auctions&quot;</span> <span class="na">name=</span><span class="s">&quot;auctions&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/core&gt;&lt;/cores&gt;</span>
</span><span class='line'><span class="nt">&lt;/solr&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Usually, the default <em>solr.xml</em> is sufficient. You may want to change the core names and core directory names. <a href="http://lucidworks.lucidimagination.com/display/solr/Configuring+solr.xml">Further details</a> on configuring <em>solr.xml</em>.</p>

<p>In Solr 4.3 and above, <em>solr.xml</em> has a <a href="https://cwiki.apache.org/confluence/display/solr/Format+of+solr.xml">new purpose and a new format</a>. In Solr 5.0 and above, the older format will not be supported.</p>

<h3>Schema</h3>

<p>A Solr schema describes the basic unit of information: a <em>document</em>. Each Solr core has a single schema, and thus, indexes only one &lsquo;form&rsquo; of document. A document is composed of multiple <em>fields</em>.  Each field has a <em>type</em>. This type is defined in the schema and specifies the underlying Java class that is created when the field is indexed. The type also specifies the text analysis (processing/digestion) that is carried out when the field is indexed. An example document and a section of the corresponding <em>schema.xml</em> is shown below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;doc&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;auction_id&quot;</span><span class="nt">&gt;</span>54432834<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;title&quot;</span><span class="nt">&gt;</span>Dell M2012 24&quot; IPS Monitor<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;category&quot;</span><span class="nt">&gt;</span>monitors<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;current_bid&quot;</span><span class="nt">&gt;</span>279.95<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;end_date&quot;</span><span class="nt">&gt;</span>2013-01-06T09:26:04.18Z<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;feature&quot;</span><span class="nt">&gt;</span>IPS<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;feature&quot;</span><span class="nt">&gt;</span>Swivel<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;/doc&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;schema</span> <span class="na">name=</span><span class="s">&quot;example&quot;</span> <span class="na">version=</span><span class="s">&quot;1.5&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;fields&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;_version_&quot;</span> <span class="na">type=</span><span class="s">&quot;long&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">required=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;auction_id&quot;</span> <span class="na">type=</span><span class="s">&quot;string&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">required=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;title&quot;</span> <span class="na">type=</span><span class="s">&quot;text_en&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">required=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;category&quot;</span> <span class="na">type=</span><span class="s">&quot;string&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">required=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;current_bid&quot;</span> <span class="na">type=</span><span class="s">&quot;currency&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">required=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;end_date&quot;</span> <span class="na">type=</span><span class="s">&quot;date&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">required=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;feature&quot;</span> <span class="na">type=</span><span class="s">&quot;string&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">required=</span><span class="s">&quot;false&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/fields&gt;</span>
</span><span class='line'><span class="nt">&lt;uniqueKey&gt;</span>auction_id<span class="nt">&lt;/uniqueKey&gt;</span>
</span><span class='line'><span class="nt">&lt;types&gt;</span>
</span><span class='line'><span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;string&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.StrField&quot;</span> <span class="na">sortMissingLast=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;date&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TrieDateField&quot;</span> <span class="na">precisionStep=</span><span class="s">&quot;0&quot;</span> <span class="na">positionIncrementGap=</span><span class="s">&quot;0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;long&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TrieLongField&quot;</span> <span class="na">precisionStep=</span><span class="s">&quot;0&quot;</span> <span class="na">positionIncrementGap=</span><span class="s">&quot;0&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;text_en&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="na">positionIncrementGap=</span><span class="s">&quot;100&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="c">&lt;!-- lots of details --&gt;</span>
</span><span class='line'><span class="nt">&lt;/fieldType&gt;</span>
</span><span class='line'><span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;currency&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.CurrencyField&quot;</span> <span class="na">precisionStep=</span><span class="s">&quot;8&quot;</span> <span class="na">defaultCurrency=</span><span class="s">&quot;USD&quot;</span> <span class="na">currencyConfig=</span><span class="s">&quot;currency.xml&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/types&gt;</span>
</span><span class='line'><span class="nt">&lt;/schema&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The components of schema.xml will now be described.</p>

<h3>Fields</h3>

<p>A field describes a piece of information within a document. It controls aspects of the indexing process such as what Java type is used to represent the data, whether the data is stored, whether the field is required in every document etc. There are two types of special fields: <strong>copyField</strong> and <strong>dynamicField</strong> (not to be confused with the type parameter such as type=&ldquo;string&rdquo;).</p>

<p><strong>copyField</strong></p>

<p>Copy fields allow you to index a field in more than one way. A field is copied allowing different field types, such as <em>text_en</em> or <em>string</em> to be applied to the single piece of information.</p>

<p><strong>dynamicField</strong></p>

<p>Dynamic fields are, in a way, an inverse to copying fields; they allow you to process multiple fields in the same way. Their most useful feature is their ability to match document fields with pattern matching. A common usage of dynamic fields is to catch all fields in a document which should not be indexed. This is required, as when fields are indexed, all document fields must be processed, or an error is thrown.</p>

<p>An example of using copy and dynamic fields is show below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;schema</span> <span class="na">name=</span><span class="s">&quot;example&quot;</span> <span class="na">version=</span><span class="s">&quot;1.5&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;fields&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;title&quot;</span> <span class="na">type=</span><span class="s">&quot;text_en&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">required=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;category&quot;</span> <span class="na">type=</span><span class="s">&quot;string&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">required=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;feature&quot;</span> <span class="na">type=</span><span class="s">&quot;string&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;true&quot;</span> <span class="na">required=</span><span class="s">&quot;false&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;allText&quot;</span> <span class="na">type=</span><span class="s">&quot;text_en&quot;</span> <span class="na">indexed=</span><span class="s">&quot;true&quot;</span> <span class="na">stored=</span><span class="s">&quot;false&quot;</span> <span class="na">required=</span><span class="s">&quot;true&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/fields&gt;</span>
</span><span class='line'><span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;title&quot;</span> <span class="na">dest=</span><span class="s">&quot;allText&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;category&quot;</span> <span class="na">dest=</span><span class="s">&quot;allText&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;copyField</span> <span class="na">source=</span><span class="s">&quot;feature&quot;</span> <span class="na">dest=</span><span class="s">&quot;allText&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">&quot;*&quot;</span> <span class="na">type=</span><span class="s">&quot;ignored&quot;</span> <span class="na">multiValued=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/schema&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Analysers, Tokenisers and Filters</h3>

<p><strong>Analyser</strong></p>

<p>An analyzer converts the text of a field and modifies it to form the text that is indexed. Analyzers are made up of one or more tokenizer and/or filter. Seeing as analyzers are constructed from filters and tokenizers in an adhoc manor, they don&rsquo;t really have a name; they will just be identified by the <em>fieldType</em> where they are defined.</p>

<p><strong>Tokenizer</strong></p>

<p>A tokenizer breaks up a stream of text into units, called tokens. For example, the text: &ldquo;Please like my blog&rdquo;, might be passed through a filter to produce the 4 tokens: (Please, like, my, blog) or using another type of tokenizer: (p, l, e, a, s, e, l, i, k, e, m, y, b, l, o, g).</p>

<p><strong>Filter</strong></p>

<p>Filters take in tokens, transform them, and output the transformed tokens (they can modify or discard them). A example: a filter which converts all text to lowercase.</p>

<p>A useful note: analyzers can operate both at index time and at query time. In other words, they transform both the documents that are indexed and the search terms that are used by a user.</p>

<p>A reasonably complex analyzer is shown below. It is defined in the example Solr <em>schema.xml</em> file for the fieldType <em>text_en</em>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">&quot;text_en&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.TextField&quot;</span> <span class="na">positionIncrementGap=</span><span class="s">&quot;100&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;index&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.StandardTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.StopFilterFactory&quot;</span>
</span><span class='line'><span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'><span class="na">words=</span><span class="s">&quot;lang/stopwords_en.txt&quot;</span>
</span><span class='line'><span class="na">enablePositionIncrements=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.EnglishPossessiveFilterFactory&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.KeywordMarkerFilterFactory&quot;</span> <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.PorterStemFilterFactory&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/analyzer&gt;</span>
</span><span class='line'><span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">&quot;query&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">&quot;solr.StandardTokenizerFactory&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.SynonymFilterFactory&quot;</span> <span class="na">synonyms=</span><span class="s">&quot;synonyms.txt&quot;</span> <span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span> <span class="na">expand=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.StopFilterFactory&quot;</span>
</span><span class='line'><span class="na">ignoreCase=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'><span class="na">words=</span><span class="s">&quot;lang/stopwords_en.txt&quot;</span>
</span><span class='line'><span class="na">enablePositionIncrements=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.LowerCaseFilterFactory&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.EnglishPossessiveFilterFactory&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.KeywordMarkerFilterFactory&quot;</span> <span class="na">protected=</span><span class="s">&quot;protwords.txt&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">&quot;solr.PorterStemFilterFactory&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/analyzer&gt;</span>
</span><span class='line'><span class="nt">&lt;/fieldType&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Schema Snares</h3>

<p><strong>Multivalued Fields</strong></p>

<p>Multivalued refers to the possibility of their being two values for present in the same document for a single field. For example, for the document shown below, there is always only one title. An example of a multivalued field is the feature field, this can have many values in a single document. What is important to realise when using multivalued fields, is that the data gets flattened. If an auction has 2 features, then the two features get flattened such that the relationship between the name and the value of the feature is lost.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- What an auction might look like in its original XML form: --&gt;</span>
</span><span class='line'><span class="nt">&lt;auction&gt;</span>
</span><span class='line'><span class="nt">&lt;title&gt;</span>Desktop PC<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;feature&gt;</span>
</span><span class='line'><span class="nt">&lt;name&gt;</span>RAM<span class="nt">&lt;/name&gt;</span>
</span><span class='line'><span class="nt">&lt;value&gt;</span>16 GB<span class="nt">&lt;/value&gt;</span>
</span><span class='line'><span class="nt">&lt;/feature&gt;</span>
</span><span class='line'><span class="nt">&lt;feature&gt;</span>
</span><span class='line'><span class="nt">&lt;name&gt;</span>CPU Frequency<span class="nt">&lt;/name&gt;</span>
</span><span class='line'><span class="nt">&lt;value&gt;</span>4.5 GHz<span class="nt">&lt;/value&gt;</span>
</span><span class='line'><span class="nt">&lt;/feature&gt;</span>
</span><span class='line'><span class="nt">&lt;/auction&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- What an auction would look like as a Solr document: --&gt;</span>
</span><span class='line'><span class="nt">&lt;doc&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;title&quot;</span><span class="nt">&gt;</span>Desktop PC<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;feature_name&quot;</span><span class="nt">&gt;</span>RAM<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;feature_value&quot;</span><span class="nt">&gt;</span>16 GB<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;feature_name&quot;</span><span class="nt">&gt;</span>CPU Frequency<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;feature_value&quot;</span><span class="nt">&gt;</span>4.5 GHz<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;/doc&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- The *effect* of multivalued field flattening: --&gt;</span>
</span><span class='line'><span class="nt">&lt;doc&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;title&quot;</span><span class="nt">&gt;</span>Desktop PC<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;feature_name&quot;</span><span class="nt">&gt;</span>RAM CPU Frequency<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;feature_value&quot;</span><span class="nt">&gt;</span>16 GB 4.5 GHz<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;/doc&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>By observing the way the data is indexed, it is clear that the relationship between the name and value pairs is lost. In other words, one to many relationships cannot be maintained by Solr in a single index (the is an exotic method of using multiple indexes and multiple cores). From a relational database point of view, Solr flattens all data into a single &lsquo;table&rsquo;.</p>

<h3>PolyFields</h3>

<p>A ployfield, such as the <em>Currency</em> field, is a field that requires more than one value to be stored when it is indexed. The currency field needs to store both the amount of money and the currency of the money. Polyfields <strong>must</strong> have <em>stored=true</em>, or errors will result.</p>

<h3>solrconfig.xml</h3>

<p><em>solrconfig.xml</em> is used to configure many aspects of Solr&rsquo;s operation, for example, it is used to configure:</p>

<pre><code>- request handlers
- listeners (listen for requests sent to handlers)
- admin interface
- replication and duplication
</code></pre>

<p>Typically, the only changes that need to be made to <em>solrconfig.xml</em> are to add or alter search and index request handlers. These two examples will be covered in the Indexing and Searching sections respectively.</p>

<h3>Indexing Data</h3>

<p>There are two ways I have used to add documents to an index: posting XML to a request handler or importing it from a database. All the data I index is also stored in a database. I initially carry out a data import from a database to catch up on the database from an empty state. Once this import is finished, new documents are added to the index by sending the documents in XML form to Solr via HTTP post.</p>

<h3>Importing from a Database</h3>

<p>Importing data from a database in carried out using the <a href="http://wiki.apache.org/solr/DataImportHandler%20Data%20Import%20Handler">Data Import Handler</a> (DIH). To use the DIH, a configuration file must be created to direct the conversion. In addition to the configuration file, a request handler must be specified in <em>solrconfig.xml</em> for the DIH. The details of writing the configuration file is given in the above link.</p>

<h3>Posting XML</h3>

<p>Once Solr has indexed the entire database, new documents are added by posting them to a Solr request handler. <a href="https://wiki.apache.org/solr/Solrj">SolrJ</a>, a Java API for Solr, is used to do the posting. Solr comes with a simple request handler for adding documents by posting XML. It is defined in solrconfig.xml as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- in solrconfig.xml --&gt;</span>
</span><span class='line'><span class="nt">&lt;requestHandler</span> <span class="na">name=</span><span class="s">&quot;/update&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.UpdateRequestHandler&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Thus, by sending XML to the URL <a href="http://localhost:8983/solr/coreName/update,">http://localhost:8983/solr/coreName/update,</a> Solr will add the document to the index. Unfortunately, in most situations, if you already have XML data which you want to index, it probably wont exist in the format that Solr expects. For example, compare the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- original XML format: --&gt;</span>
</span><span class='line'><span class="nt">&lt;auction&gt;</span>
</span><span class='line'><span class="nt">&lt;auction_id&gt;</span>54432834<span class="nt">&lt;/auction_id&gt;</span>
</span><span class='line'><span class="nt">&lt;title&gt;</span>Dell M2012 24&quot; IPS Monitor<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;category&gt;</span>monitors<span class="nt">&lt;/category&gt;</span>
</span><span class='line'><span class="nt">&lt;current_bid&gt;</span>279.95<span class="nt">&lt;/current_bid&gt;</span>
</span><span class='line'><span class="nt">&lt;/auction&gt;</span>
</span><span class='line'><span class="c">&lt;!-- The format Solr requires: --&gt;</span>
</span><span class='line'><span class="nt">&lt;doc&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;auction_id&quot;</span><span class="nt">&gt;</span>54432834<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;title&quot;</span><span class="nt">&gt;</span>Dell M2012 24&quot; IPS Monitor<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;category&quot;</span><span class="nt">&gt;</span>monitors<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;field</span> <span class="na">name=</span><span class="s">&quot;current_bid&quot;</span><span class="nt">&gt;</span>279.95<span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;/doc&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Thus, there is a need to convert the original XML into the form which Solr expects. There are two ways to do this conversion:</p>

<ul>
<li>In Java: JAXP API can be used to carry out the conversion. This will require writing custom code to do the conversion. Alternatively, if your data exists as Java classes, you can index those through SolrJ, which has a persistence mechanism allowing Java objects to be indexed directly.</li>
<li>Use XSLT: Configure the Solr request handler to transform the posted XML using a specified XSLT before trying to index the document. An XSLT file to transform an XML document (with root XML element &lsquo;Auction&rsquo;) is shown below:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- the 2.0 version of xsl reqires a custom processor to be used. Saxon9he is used, and is</span>
</span><span class='line'><span class="c">located in Jetty&#39;s ext/ folder. This library requires Jetty to be started like so:</span>
</span><span class='line'><span class="c">java -Djavax.xml.transform.TransformerFactory=net.sf.saxon.TransformerFactoryImpl -jar start.jar</span>
</span><span class='line'><span class="c">--&gt;</span>
</span><span class='line'><span class="nt">&lt;xsl:stylesheet</span> <span class="na">version=</span><span class="s">&quot;2.0&quot;</span>
</span><span class='line'><span class="na">xmlns:xsl=</span><span class="s">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span>
</span><span class='line'><span class="na">xmlns:xs=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema&quot;</span>
</span><span class='line'><span class="na">xmlns:fn=</span><span class="s">&quot;http://www.w3.org/2005/xpath-functions&quot;</span>
</span><span class='line'><span class="na">xmlns:xdt=</span><span class="s">&quot;http://www.w3.org/2005/xpath-datatypes&quot;</span>
</span><span class='line'><span class="na">xmlns:err=</span><span class="s">&quot;http://www.w3.org/2005/xqt-errors&quot;</span>
</span><span class='line'><span class="na">xmlns:tm=</span><span class="s">&quot;http://api.trademe.co.nz/v1&quot;</span>
</span><span class='line'><span class="na">exclude-result-prefixes=</span><span class="s">&quot;xs xdt err fn tm&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;xsl:output</span> <span class="na">method=</span><span class="s">&quot;xml&quot;</span> <span class="na">indent=</span><span class="s">&quot;yes&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- &#39;Auction&quot; is the root XML element --&gt;</span>
</span><span class='line'><span class="nt">&lt;xsl:template</span> <span class="na">match=</span><span class="s">&quot;tm:Auction&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;add&gt;&lt;doc&gt;</span>
</span><span class='line'><span class="nt">&lt;xsl:for-each</span> <span class="na">select=</span><span class="s">&quot;//text()/.. intersect child::*&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;field&gt;</span>
</span><span class='line'><span class="nt">&lt;xsl:attribute</span> <span class="na">name=</span><span class="s">&quot;name&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;xsl:value-of</span> <span class="na">select=</span><span class="s">&quot;name()&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/xsl:attribute&gt;</span>
</span><span class='line'><span class="nt">&lt;xsl:value-of</span> <span class="na">select=</span><span class="s">&quot;.&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;/xsl:for-each&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;xsl:for-each</span> <span class="na">select=</span><span class="s">&quot;//text()/.. except child::*&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;field&gt;</span>
</span><span class='line'><span class="nt">&lt;xsl:attribute</span> <span class="na">name=</span><span class="s">&quot;name&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;xsl:value-of</span> <span class="na">select=</span><span class="s">&quot;../name()&quot;</span><span class="nt">/&gt;</span>_<span class="nt">&lt;xsl:value-of</span> <span class="na">select=</span><span class="s">&quot;name()&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/xsl:attribute&gt;</span>
</span><span class='line'><span class="nt">&lt;xsl:value-of</span> <span class="na">select=</span><span class="s">&quot;.&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/field&gt;</span>
</span><span class='line'><span class="nt">&lt;/xsl:for-each&gt;</span>
</span><span class='line'><span class="nt">&lt;/doc&gt;&lt;/add&gt;</span>
</span><span class='line'><span class="nt">&lt;/xsl:template&gt;</span>
</span><span class='line'><span class="nt">&lt;/xsl:stylesheet&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Indexing Snares</h3>

<p><strong>Letter Case in the DIH Configuration File</strong></p>

<p>Table and row names in the DIH configuration file are tediously case-sensitive-ish. Some places the case doesn&rsquo;t matter, and other places it does. Where it does matter, the table and row names must be in the exact same form as in the database. Also, case must be internally consistent within the configuration file for most name usages.</p>

<p><strong>Missing Fields in Posted XML and DIH Mapping Everything to the Ignore Field</strong></p>

<p>These two seemingly unrelated issues are linked by the presence of a dynamic field in schema.xml. When posting XML data, all fields defined in the schema file must be present in the XML file being posted. If there are fields in the XML document which are not used in the index, errors are throw when posting the XML. The way around this is to create a catch-all field: this schema field catches all fields in the document which have not been mapped to another field. This workaround, however, interferes with the operation of the DIH. The DIH, annoyingly, maps nearly all fields to the catch-all field. This may have something to do with the nice feature of the DIH which allows you to leave out every mapping from row->field if the row and field have the same name. Leaving out these mappings, however, seems to cause all fields to map to the catch-all ignore field. My current hack involves changing the schema.xml file every time I want to import documents using the DIH.</p>

<h3>Searching</h3>

<p>Search requests are carried out by request handlers which parse and process searches. A good way to describe search handlers is through an example. The following is a search request handler I use:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'> <span class="nt">&lt;requestHandler</span> <span class="na">name=</span><span class="s">&quot;/broadQuery&quot;</span> <span class="na">class=</span><span class="s">&quot;solr.SearchHandler&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;lst</span> <span class="na">name=</span><span class="s">&quot;defaults&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">&quot;defType&quot;</span><span class="nt">&gt;</span>edismax<span class="nt">&lt;/str&gt;</span> <span class="c">&lt;!-- The search parser to use. --&gt;</span>
</span><span class='line'><span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">&quot;wt&quot;</span><span class="nt">&gt;</span>xml<span class="nt">&lt;/str&gt;</span> <span class="c">&lt;!-- Output type. --&gt;</span>
</span><span class='line'><span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">&quot;fl&quot;</span><span class="nt">&gt;</span>auction_id title<span class="nt">&lt;/str&gt;</span> <span class="c">&lt;!-- The fields to list in the search response --&gt;</span>
</span><span class='line'><span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">&quot;qf&quot;</span><span class="nt">&gt;</span>Title^2 Feature<span class="nt">&lt;/str&gt;</span> <span class="c">&lt;!-- The fields (and their weightings) to search in.--&gt;</span>
</span><span class='line'><span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">&quot;rows&quot;</span><span class="nt">&gt;</span>100<span class="nt">&lt;/str&gt;</span> <span class="c">&lt;!-- The number of results to return. --&gt;</span>
</span><span class='line'><span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">&quot;pf&quot;</span><span class="nt">&gt;</span>Title^4 Feature^2<span class="nt">&lt;/str&gt;</span> <span class="c">&lt;!-- Phrase field (and their weightings). Fields to search for closely located matches. --&gt;</span>
</span><span class='line'><span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">&quot;ps&quot;</span><span class="nt">&gt;</span>0<span class="nt">&lt;/str&gt;</span> <span class="c">&lt;!-- Phrase slop. How many tokens apart must words be to be able to qualify as a phrase--&gt;</span>
</span><span class='line'><span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">&quot;echoParams&quot;</span><span class="nt">&gt;</span>all<span class="nt">&lt;/str&gt;</span> <span class="c">&lt;!-- Print the search settings in the search results. Just a handy feature --&gt;</span>
</span><span class='line'><span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">&quot;mm&quot;</span><span class="nt">&gt;</span>3<span class="ni">&amp;lt;</span>-1 5<span class="ni">&amp;lt;</span>-2 6<span class="ni">&amp;lt;</span>-40%<span class="nt">&lt;/str&gt;</span>
</span><span class='line'><span class="c">&lt;!-- 3&gt;-1 5&gt;-2 6&gt;-40% Means: If there are 1-3 search terms, they are all required to</span>
</span><span class='line'><span class="c">&lt;!-- match. If there are 4-5 search terms, then (all - 1) must match.</span>
</span><span class='line'><span class="c">If there are 5-6 search terms, then (all -2) must match</span>
</span><span class='line'><span class="c">If there are &gt;6 search terms, then (all - 40%) must match. --&gt;</span>
</span><span class='line'><span class="nt">&lt;/lst&gt;</span>
</span><span class='line'><span class="nt">&lt;/requestHandler&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>All these parameters can be specified at query time also; defining them within the request handler definition simply specifies defaults. To use this search handler I would navigate/send request to:</p>

<p><a href="http://localhost:8983/solr/auctions/broadQuery?q=dell+monitor+IPS">http://localhost:8983/solr/auctions/broadQuery?q=dell+monitor+IPS</a></p>

<p> [Assuming that &lsquo;auctions&rsquo; is the name of your Solr core, and Solr is hosted on localhost]</p>

<p> While most of the search handler&rsquo;s configuration can be understood from the comments, defType, pf, ps and mm might need further explanation:</p>

<p>defType</p>

<p>defType specifies the search parser to use. There are a number of popular search parsers including <a href="http://lucidworks.lucidimagination.com/display/solr/The+Standard+Query+Parser%20Lucene">Standard Search</a>,  <a href="http://lucidworks.lucidimagination.com/display/solr/The+DisMax+Query+Parser">DisMax</a> and <a href="http://lucidworks.lucidimagination.com/display/solr/The+Extended+DisMax+Query+Parser">eDisMax</a>. eDismax combines the features of both the Standard Search and DisMax; eDisMax supports the full query syntax of the Lucene Standard Query, but is far more tolerant of syntax errors. eDismax seems like the obvious choice in most circumstances.</p>

<p>pf</p>

<p>pf (phase fields) specifies what fields should be checked for having matching &lsquo;phrases&rsquo;. If matching terms are close enough together, then they can be considered a phrase. A result with a matching phrase will score higher than one with no matching phase. You can also specify a weighting: a field weighting will control the effect of a match on the match&rsquo;s score. For example, a phrase found in the title will score higher that one found in feature.</p>

<p>ps</p>

<p>ps (phrase slop) specifies how many terms can be in-between two matching terms and still allow the matching terms to be considered a matching phrase.</p>

<h3>Searching from Java</h3>

<p>Searching can be carried out from Java with the use of <a href="https://wiki.apache.org/solr/Solrj">SolrJ</a>. The gist below shows a very simple method utilizing SolrJ:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>public class SimpleSolrSearch {
</span><span class='line'>private String solrUrl = &quot;http://192.168.1.103:8983/solr/auctions&quot;;
</span><span class='line'>private SolrServer server;
</span><span class='line'>public SimpleSolrSearch() {
</span><span class='line'>server = new HttpSolrServer(solrUrl);
</span><span class='line'>}
</span><span class='line'>public Collection<span class="nt">&lt;Integer&gt;</span> search(String searchTerms, String category, BigDecimal maxBidAmount) throws SolrServerException {
</span><span class='line'>SolrQuery query = new SolrQuery();
</span><span class='line'>String categoryFilter = &quot;category:\&quot;&quot; + category + &quot;\&quot;&quot;;
</span><span class='line'>query.addFilterQuery(categoryFilter);
</span><span class='line'>query.addFilterQuery(&quot;current_bid:[1 TO &quot; + maxBidAmount.doubleValue() + &quot;]&quot;);
</span><span class='line'>query.setQuery(searchTerms);
</span><span class='line'>
</span><span class='line'>QueryResponse response = server.query(query);
</span><span class='line'>SolrDocumentList documentList = response.getResults();
</span><span class='line'>List<span class="nt">&lt;Integer&gt;</span> auctionIds = new ArrayList<span class="err">&lt;</span>&gt;();
</span><span class='line'>for(SolrDocument doc : documentList) {
</span><span class='line'>int listingId = Integer.parseInt((String)doc.getFirstValue(&quot;auction_id&quot;));
</span><span class='line'>auctionIds.add(listingId);
</span><span class='line'>}
</span><span class='line'>return auctionIds;
</span><span class='line'>}
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<h3>Further Reading</h3>

<p>I have briefly covered many common tasked carried out when using Solr. There are many more features: search faceting, search clustering, distributed searches and index replication to name a few. There are many comprehensive sources available. Some useful sources I would suggest:
&ndash; <a href="http://lucidworks.lucidimagination.com/display/solr/Apache+Solr+Reference+Guide">Lucid Works&#8217; Solr Reference Guide</a>
&ndash; <a href="http://www.amazon.com/gp/product/1782161325/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1782161325&amp;linkCode=as2&amp;tag=kevidoraprog-20">Apache Solr 4 Cookbook</a>
&ndash; <a href="http://www.amazon.com/gp/product/1933988177/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1933988177&amp;linkCode=as2&amp;tag=kevidoraprog-20">Lucene in Action, 2nd Edition</a>   (if you want to go to a lower level than Solr)
&ndash; <a href="http://www.amazon.com/gp/product/0596802277/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0596802277&amp;linkCode=as2&amp;tag=kevidoraprog-20">Search Patterns</a>   (from a data mining perspective)
&ndash; <a href="http://www.amazon.com/gp/product/1935182854/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1935182854&amp;linkCode=as2&amp;tag=kevidoraprog-20">Tika in Action</a>     (if you want to index and search documents such as PDFs)</p>

<p>The blog&rsquo;s source is : <a href="http://kevindoran1.blogspot.com/2013/02/solr-tutorial.html">http://kevindoran1.blogspot.com/2013/02/solr-tutorial.html</a></p>

<hr />

<p>Over.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OCTOPress增加Disqus评论]]></title>
    <link href="http://icersummer.github.io/blog/2014/05/09/plugins-disqus-github-googleplus/"/>
    <updated>2014-05-09T15:56:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/05/09/plugins-disqus-github-googleplus</id>
    <content type="html"><![CDATA[<h2>OCTOPress增加Disqus评论</h2>

<p>今日步骤：</p>

<h2>1-使用WinSCP链接UbuntuSolr image，传输已更新数据。</h2>

<p>传输之后</p>

<p>1.1-更新blog页面</p>

<pre><code>788  rake generate
789  rake deploy
</code></pre>

<p>1.2-checkin、push更改到source分支</p>

<pre><code>  792  cd source/  
  798  git add .
  799  git commit -m 'new entry'
  800* git commit -a
  801  git commit -m 'new entry'
  803  git push origin source
</code></pre>

<h2>2-添加Disqus功能</h2>

<p>非常简单，在文件_config.yml中，修改Disqus short name：</p>

<pre><code>disqus_short_name: vjgithubblog #注意这里中间一定有一个空格
disqus_show_comment_count: false
</code></pre>

<p>这里的disqus short name可以在<a href="https://vjgithubblog.disqus.com/admin/settings/universalcode/">这里</a>申请。</p>

<p>3-同時Octopress還提供了很多第三方插件，很容易配置並支持</p>

<blockquote><p>These third party integrations are already set up for you. Simply fill in the configurations and they&rsquo;ll be added to your site.</p>

<pre><code>Github - List your github repositories in the sidebar
Twitter - Add a button for sharing of posts and pages on Twitter
Google Plus One - Setup sharing for posts and pages on Google's plus one network.
Pinboard - Share your recent Pinboard bookmarks in the sidebar.
Delicious - Share your recent Delicious bookmarks in the sidebar.
Disqus Comments - Add your disqus short name to enable disqus comments on your site.
Google Analytics - Add your tracking id to enable Google Analytics tracking for your site.
Facebook - Add a Facebook like button
</code></pre></blockquote>

<p>4-添加了Github repository显示：</p>

<p><code>github_user: yourGithubName</code></p>

<p><code>github_show_profile_link: true</code></p>

<p>5-添加了googlePlus链接：</p>

<p><code>googleplus_user: 11509823689222118830</code> #这里的数字是点击自己的Google Plus Profile时显示的一串数字，不是GMail账户名。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转载]为什么要写Blog？]]></title>
    <link href="http://icersummer.github.io/blog/2014/04/29/7-reasons-why-personal-blogs-rock/"/>
    <updated>2014-04-29T16:59:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/04/29/7-reasons-why-personal-blogs-rock</id>
    <content type="html"><![CDATA[<h1>为什么要写Blog？</h1>

<p>来自：<a href="http://www.ruanyifeng.com/blog/2006/12/why_i_keep_blogging.html">阮一峰的博客</a></p>

<p>日期：2006年12月22日</p>

<p>到今年12月为止，我写Blog已经满3年了，一共写了接近600篇，平均每2天写一篇。今后应该还会继续写下去。</p>

<p>3年前，我开始写的时候，并没有想过自己会坚持这么久。3年中，也遇见过几次有人问我&#8221;为什么要写Blog？&#8221;</p>

<p>是啊，为什么要写Blog？毕竟这里没有人支付稿酬，也看不出有任何明显的物质性收益。</p>

<p>Darren Rowse在他的<a href="http://www.problogger.net/archives/2006/12/06/7-reasons-why-personal-blogs-rock/">Blog</a>上，讲到了7个理由，我觉得说得很好。</p>

<p><strong>1. 学会写作Blog的技巧（teach you the skills of blogging）</strong></p>

<p>没有人天生会写Blog，我刚开始的时候也不知道该怎么写。但是，经过不断的尝试，现在我知道怎么可以写出受欢迎的文章。</p>

<p><strong>2. 熟悉Blog工具（familiarize you with the tools of blogging）</strong></p>

<p>写作Blog，可以选择自己搭建平台，也可以选择网上的免费Blog提供商。我曾经试用过不少Blog软件，最后才选择了现在的Moveable Type，这本身也是一个学习过程。</p>

<p><strong>3. 便于更好地安排时间（help you work out how much time you have）</strong></p>

<p>写作Blog花费的时间，要比大家想象的多，甚至也比我自己想象的多。但是，另一方面，每天我们又有很多时间被无谓地浪费了。坚持写作Blog的过程，也是进行更好的时间安排的过程。</p>

<p><strong>4. 便于你了解自己是否可以长期做一件喜欢的事情（help you work out if you can sustain blogging for the long term）</strong></p>

<p>很多人都有自己的爱好，但是只有当你享受到这种爱好时，你才会长期坚持下去。写作Blog可以帮助你体验到这种感觉。</p>

<p><strong>5. 便于体验Blog文化（give you a taste of blogging &lsquo;culture&#8217;）</strong></p>

<p>Blog的世界有一种无形的礼仪、风格和用语。熟悉它们，会使你更好地表达自己和理解他人。</p>

<p><strong>6. 便于你形成和了解自我（help you define a niche）</strong></p>

<p>长期写作Blog最大的好处之一就是，写着写着，你的自我会变得越来越清晰。你最终会明白自己是一个什么样的人，以及自己热爱的又是什么东西。</p>

<p><strong>7. 帮助你找到读者（help you find a readership）</strong></p>

<p>与他人交流是生命最大的乐趣之一。写作Blog可以帮助我们更好地做到这一点。</p>

<p>如果你觉得你想说的东西不适宜让他人知道，你可以在自己的电脑里写，不用放到网上。这样除了上面第7点以外，其他6点的好处也还是适用的。</p>

<p>总之，正是因为以上7个理由，所以我强烈建议，每一个朋友都应该有一个自己的Blog，尝试将自己的生活和想法记录下来，留下一些印记。</p>

<p>（完）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[正则表达式]]></title>
    <link href="http://icersummer.github.io/blog/2014/04/22/regex-intro/"/>
    <updated>2014-04-22T17:46:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/04/22/regex-intro</id>
    <content type="html"><![CDATA[<p>^cell\d  :</p>

<p>^[1-9]\d+$</p>

<p>^：表示匹配起始位置</p>

<p>\d+: 0-9的数字，个数为任意个</p>

<p>$: 匹配末尾</p>

<p>. : any character</p>

<p>[abc] : any of the characters a,b,or c (same as a|b|c)</p>

<p>[abc[hij]]: any of a,b,c,h,j,j (same as a|b|c|h|i|j) (union)</p>

<p>[a-z&amp;&amp;[hij]]: either h,I, or j (insersection)</p>

<p>\s : a whitespace character (space, tab, newline, form feed, carriage return)</p>

<p>\S : a non-whitespace character ([^\s])</p>

<p>\d : a numberic digit [0-9]</p>

<p>\D : a non-digit [0-9]</p>

<p>\w : a word character [a-zA-Z_0-9]</p>

<p>\W : a non-word chacter [^\w]</p>

<p>正则表达式的百度百科详细解释<a href="http://baike.baidu.com/view/94238.htm">link</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TiddlyWiki简介]]></title>
    <link href="http://icersummer.github.io/blog/2014/04/22/tiddlywiki-for-single-page-wiki/"/>
    <updated>2014-04-22T17:12:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/04/22/tiddlywiki-for-single-page-wiki</id>
    <content type="html"><![CDATA[<p>之前cxc曾经问过我，有没有比较好的wiki展示页面或系统，能够脱离Server运行，而且内容组织良好。</p>

<p>当时是基于JS实现了一个单页面，但是其内容编辑的话，还是要在源代码中编辑，比如加入新段落-BR，或-P tag，个人感觉很马虎，不满意。</p>

<p>现在发现一个比较不错的wiki单页面系统，可用性、易用性都很好-<a href="http://tiddlywiki.com/">TiddlyWiki</a>.</p>

<p>具体使用方法可以参考<a href="http://tiddlywiki.com/">官网</a>，现在最新版是Release 5.0.10-beta.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RTSP命令]]></title>
    <link href="http://icersummer.github.io/blog/2014/04/22/rtsp-protocol/"/>
    <updated>2014-04-22T15:56:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/04/22/rtsp-protocol</id>
    <content type="html"><![CDATA[<h2>RTSP命令的Java实现</h2>

<p>以前所做项目中涉及到视频编解码，其中实现了RTSP协议，</p>

<p>参考一下链接研究它：</p>

<ol>
<li><a href="http://blog.csdn.net/xyz_lmn/article/details/6055179">rtsp网络协议的java实现 </a></li>
<li><a href="http://blog.csdn.net/feidragon319/archive/2007/08/14/1742357.aspx">RTSP简单命令</a></li>
<li><a href="http://hi.baidu.com/ssyuan/item/128bc7d624a77a876dce3fc5">RTSP客户端的java实现</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Good Refcardz of Core Java on DZone]]></title>
    <link href="http://icersummer.github.io/blog/2014/04/22/core-java-refcardz/"/>
    <updated>2014-04-22T14:53:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/04/22/core-java-refcardz</id>
    <content type="html"><![CDATA[<h1>Core Java</h1>

<h2>The Essential Java Cheat Sheet</h2>

<blockquote><p>The Core Java Technology is the foundation of Java Platform of JSE. It is utilized in all classes of Java programming, from desktop to Java Enterprise Edition. This DZone Refcard gives you an overview of key aspects of the Java language and cheat sheets on the core library (formatted output, collections, regular expressions, logging, properties) as well as the most commonly used tools (javac, java, jar). In addition, this Refcard reviews Java Keywords, Standard Java Packages, Character Escape Sequences, Collections and Common Algorithms, Regular Expressions, JAR Files and more.</p></blockquote>

<p>The <a href="http://refcardz.dzone.com/refcardz/core-java?uid=1223903&amp;nid=5305&amp;token=12239030218175f8dc8b6">hyperlink</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读写Blob对象-Oracle版]]></title>
    <link href="http://icersummer.github.io/blog/2014/04/22/read-write-blob-data/"/>
    <updated>2014-04-22T13:26:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/04/22/read-write-blob-data</id>
    <content type="html"><![CDATA[<p>在JDBC中如何Insert/Retrieve BLOB对象呢？</p>

<p>示例代码如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>  private static void testWriteReadObjectInBlob() {
</span><span class='line'>      try {
</span><span class='line'>          // table blob_test : create table blob_test(id number, test blob);
</span><span class='line'>          System.out.println("@testWriteReadObjectInBlob:");
</span><span class='line'>          conn.setAutoCommit(false);
</span><span class='line'>          Statement stmt = conn.createStatement();
</span><span class='line'>          String id = "" + 6;
</span><span class='line'>          System.out.println("current id : " + id);
</span><span class='line'>          String sql1 = "insert into blob_test(id, test) values ([id], empty_blob())".replace("[id]", id);
</span><span class='line'>          stmt.executeUpdate(sql1);
</span><span class='line'>          String sql2 = "select test from blob_test where id=[id] for update".replace("[id]", id);
</span><span class='line'>          ResultSet rs = stmt.executeQuery(sql2);
</span><span class='line'>          Object master = any_of_my_class_object;//TODO
</span><span class='line'>          ByteArrayOutputStream bos = new ByteArrayOutputStream();
</span><span class='line'>          ObjectOutputStream oos = new ObjectOutputStream(bos);
</span><span class='line'>          oos.writeObject(master);
</span><span class='line'>          byte[] data = bos.toByteArray();
</span><span class='line'>          while(rs.next()) {
</span><span class='line'>              oracle.sql.BLOB blob = (oracle.sql.BLOB)rs.getBlob("test");
</span><span class='line'>              OutputStream outStream = blob.getBinaryOutputStream();
</span><span class='line'>              outStream.write(data, 0, data.length);
</span><span class='line'>              outStream.flush();
</span><span class='line'>              outStream.close();
</span><span class='line'>          }
</span><span class='line'>          conn.commit();
</span><span class='line'>          
</span><span class='line'>          //read out
</span><span class='line'>          String sql3 = "select * from blob_test where id=[id]".replace("[id]", id);
</span><span class='line'>          rs = stmt.executeQuery(sql3);
</span><span class='line'>          while(rs.next()) {
</span><span class='line'>              byte[] byteBuffer = rs.getBytes("test");
</span><span class='line'>              ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteBuffer);
</span><span class='line'>              ObjectInputStream objectInputStream = new ObjectInputStream(byteArrayInputStream);
</span><span class='line'>              Object obj = objectInputStream.readObject();
</span><span class='line'>              System.out.println("--------------------");
</span><span class='line'>              System.out.println(obj);
</span><span class='line'>              System.out.println("--------------------");
</span><span class='line'>              System.out.println(obj.getClass().getName());
</span><span class='line'>          }
</span><span class='line'>          
</span><span class='line'>      } catch (Exception e) {
</span><span class='line'>          e.printStackTrace();
</span><span class='line'>      }   
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p>参考链接：</p>

<ol>
<li>Inserting BLOB data through JDBC <a href="http://www.go4expert.com/forums/inserting-blob-data-jdbc-t866/">link</a>;</li>
<li>I get good answer in this SOF post <a href="http://stackoverflow.com/questions/8348427/how-to-write-update-oracle-blob-in-a-reliable-way">link</a>;</li>
<li>洛显臃肿的多种BLOB读值方式：Store Precedure、DBMS_LOB、Oracle Blob：<a href="http://blog.csdn.net/yanghongchang_/article/details/7644115">link</a></li>
<li>Reading a blob from MySQL <a href="http://stackoverflow.com/questions/14610011/reading-a-blob-from-mysql-with-java">link</a>;</li>
</ol>


<p>另note：</p>

<ol>
<li>Oracle中blob类型为blob；</li>
<li>SqlServer中blob类型为image。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Class.getName() 的返回值说明]]></title>
    <link href="http://icersummer.github.io/blog/2014/04/18/class-getname-method/"/>
    <updated>2014-04-18T21:12:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/04/18/class-getname-method</id>
    <content type="html"><![CDATA[<p>refer url: <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Class.html#getName%28%29">link</a></p>

<p> Examples:</p>

<pre><code> String.class.getName()
     returns "java.lang.String"
 byte.class.getName()
     returns "byte"
 (new Object[3]).getClass().getName()
     returns "[Ljava.lang.Object;"
 (new int[3][4][5][6][7][8][9]).getClass().getName()
     returns "[[[[[[[I"
</code></pre>

<p>在我的代码中出现如下信息：</p>

<pre><code>obj : [B@34be51e8
classname : [B
</code></pre>

<p>a single [ means an array of</p>

<p>L followed by a fully qualified class name (e.g. java/lang/Object) is the class name terminated by semicolon ;</p>

<p>so [Ljava.lang.object; means Object[]</p>

<p>class [B</p>

<p>class [Lcom.sun.mail.imap.IMAPMessage;</p>

<p>class [C</p>

<p>class [I</p>

<p>class [Ljava.lang.Object;</p>

<p>[B is array of primitive byte</p>

<p>[C is array of primitive char</p>

<p>[I is array of primitive int</p>

<p>[Lx is array of type x</p>

<p>Here is the entire list: <a href="http://stackoverflow.com/questions/1040868/java-syntax-and-meaning-behind-b1ef9157-binary-address">link on SOF</a></p>

<pre><code>B - byte
C - char
D - double
F - float
I - int
J - long
Lfully-qualified-class; - between an L and a ; is the full class name, using / as the delimiter between packages (for example, Ljava/lang/String;)
S - short
Z - boolean
[ - one [ for every dimension of the array
(argument types)return-type - method signature, such as (I)V, with the additional pseudo-type of V for void method
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SCP命令的使用]]></title>
    <link href="http://icersummer.github.io/blog/2014/04/15/usage-of-scp/"/>
    <updated>2014-04-15T21:12:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/04/15/usage-of-scp</id>
    <content type="html"><![CDATA[<p><strong>复制文件</strong></p>

<p>SCP命令用于在Linux间拷贝文件，（可以在拷贝过程中重命名）</p>

<p>scp [可选参数] file_source file_target</p>

<p>从本地复制到远程：</p>

<p>scp local_file remote_username@remote_ip:remote_folder</p>

<p>scp local_file remote_username@remote_ip:remote_folder</p>

<p>scp local_file remote_ip:remote_folder</p>

<p>scp local_file remote_ip:remote_file</p>

<p>用法示例：</p>

<p>user1 in centos, user2 in ubuntu</p>

<p>copy file1 from centos to ubuntu</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$scp /home/user1/downloads/file1 user2@ubuntu_ip:/home/user2/
</span><span class='line'>type in the password of user2</span></code></pre></td></tr></table></div></figure>


<p><strong>复制目录</strong></p>

<p>scp -r local_folder remote_username@remote_ip:remote_folder</p>

<p><strong>从远程复制到本地</strong></p>

<p>scp remote_user@remote_ip:remote_file locale_file_path</p>

<p>scp -r remote_user@remote_ip:remote_folder locale_folder_path</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用带有TAB功能的superPutty代替putty]]></title>
    <link href="http://icersummer.github.io/blog/2014/04/08/use-superputty-to-replace-putty/"/>
    <updated>2014-04-08T21:12:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/04/08/use-superputty-to-replace-putty</id>
    <content type="html"><![CDATA[<p>设置中SuperPutty是依赖于putty的，需要设置Putty.exe的路径。</p>

<p>官网： <a href="http://code.google.com/p/superputty/">http://code.google.com/p/superputty/</a></p>

<p>下载地址：<a href="http://code.google.com/p/superputty/downloads/detail?name=SuperPutty-1.4.0.4.zip&amp;can=2&amp;q=">link</a></p>

<p>官方说明：</p>

<blockquote><p>Introduction</p>

<p>SuperPutty is a Windows GUI Application that allows the PuTTY SSH Client to be opened in Tabs. Additionally there is support for SCP to transfer files.</p>

<p>SuperPutty is written in C# and runs on any Windows platform supporting the .NET Framework 2.0 or newer.</p>

<p>Features</p></blockquote>

<pre><code>Docking user interface allows personalized workspace and managing multiple PuTTY sessions easy
Export/Import session configuration
Upload files securely using the scp or sftp protocols
Layouts
Supports PuTTY session configurations including Private Keys
Supports SSH, RLogin, Telnet and RAW protocols
Supports local shell via MinTTY or puttycyg
Supports KiTTY 
</code></pre>

<blockquote><p>Project Status</p></blockquote>

<p>SuperPutty is stable and usable. Please report and bugs in the issue tracker</p>

<p>来自softpedia.com的评论：</p>

<p><a href="http://www.softpedia.com/get/Network-Tools/Telnet-SSH-Clients/SuperPutty.shtml">SoftPedia.com</a></p>

<p>Softpedia Editor&rsquo;s Review for SuperPuTTY</p>

<p>EDITOR&rsquo;S RATING:   4.5/5</p>

<p>**Accessible and user-friendly PuTTY interface that features support for KiTTY, SSH, RLogin, RAW protocols, Telnet and local shell</p>

<p>Written by <em><em>Mihaela Citea</em></em> on November 28th, 2013</p>

<p>SuperPuTTY aims to enhance the capabilities of the PuTTY SSH and Telnet client by allowing you to launch it in multiple tabs. It offers you the possibility to easily manage multiple sessions of PuTTY using a single, comprehensive working environment.</p>

<p>Aside from this significantly important advantage, the application comes with all the advantages and tools that PuTTY brings. It features support for multiple connection types and protocols, including Raw, Telnet, SCP, Rlogin, SSH, Serial, KiTTY and local shell via Cygterm and Mintty.</p>

<p>The tab-based interface enables you to personalize your workspace and organize all the running PuTTY sessions. You can easily create a new session and opt for the desired profile to load. The xterm terminal emulator is intended for advanced users, while the comprehensive configuration panel of PuTTY enables you to change the connection options.</p>

<p>Various general settings are available for customization and the application enables you to configure line discipline and remote-controlled printing. Also, you can set keyboard controls, notifications and alarms, as well as tweak the behavior of the terminal screen, TCP connections, login and terminal details, environment variables, proxy settings and a few settings specific to each protocol type.</p>

<p>Sessions can be imported and exported and layouts can be saved for later use. The main window of SuperPuTTY allows quick switching between used protocols, hosts and sessions, as well as one-click configuration selection and command sending.</p>

<p>SuperPuTTY enables you to link your machine to multiple computers and control all the workstations using one single interface. Aside from running multiple sessions, it tries to enhance the power of PuTTY even more, with advanced support for data encryption, reliable command-line SCP and SFTP clients for file uploading, port forwarding and private key-based authentication.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解锁Oracle账号]]></title>
    <link href="http://icersummer.github.io/blog/2014/04/02/oracle-the-account-is-locked/"/>
    <updated>2014-04-02T21:12:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/04/02/oracle-the-account-is-locked</id>
    <content type="html"><![CDATA[<p>错误信息：</p>

<blockquote><p>ORA-28000
Error: ORA-28000: the account is locked</p>

<p>Cause: The user has entered wrong password consequently for maximum number of times specified by the user&rsquo;s profile parameter FAILED_LOGIN_ATTEMPTS, or the database administrator has locked the account.</p>

<p>Action: Wait for PASSWORD_LOCK_TIME or contact the database administrator</p></blockquote>

<p>解决办法：</p>

<blockquote><p>To unlock an user manually:
ALTER USER username ACCOUNT UNLOCK;</p>

<p>to change his password:
alter user username identified by new_password;</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[创建Solr UI应用]]></title>
    <link href="http://icersummer.github.io/blog/2014/04/02/create-project-solr-ui/"/>
    <updated>2014-04-02T21:12:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/04/02/create-project-solr-ui</id>
    <content type="html"><![CDATA[<p>~$ git clone git://github.com/imathis/octopress.git hellosummer_blog</p>

<p>git push origin branchName
git remote add -t master -f origin <a href="https://github.com/hellosummer/hellosummer.github.com.git">https://github.com/hellosummer/hellosummer.github.com.git</a>
$git remote add origin git@github:YourGithubID/work.git</p>

<p>git checkout -b feature_x
git push origin <branch></p>

<p>不同情况的提交：</p>

<p>1.checkout新项目，修改，提交
//在当前目录下建立solrLearning目录，并克隆成功solrLearning项目
$ git clone git://github.com/icersummer/solrLearning.git solrLearning
//如下命令checkin成功
$ git push <a href="https://github.com/icersummer/solrLearning.git">https://github.com/icersummer/solrLearning.git</a> master
Username for &lsquo;<a href="https://github.com">https://github.com</a>&rsquo;:
Password for &lsquo;<a href="https://icersummer@github.com">https://icersummer@github.com</a>&rsquo;:
To <a href="https://github.com/icersummer/solrLearning.git">https://github.com/icersummer/solrLearning.git</a>
   dcfaaac..16d9c7e  master &ndash;> master</p>

<p>2.已存在的checkout的项目，拉取最新，修改，提交
git pull</p>

<p>3.建立分支，修改，提交</p>

<p>4.已存在分支，拉取最新，修改，提交</p>

<p>5.合并其他分支到Master分支
git merge <branch></p>

<p>6.回滚本地未提交改动
git checkout &mdash; <filename></p>

<p>7.覆盖本地所有改动与提交
git fetch origin</p>

<p>实用小贴士</p>

<p>内建的图形化 git：
gitk
彩色的 git 输出：
git config color.ui true
显示历史记录时，每个提交的信息只显示一行：
git config format.pretty oneline
交互式添加文件到暂存区：
git add -i</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[导入、导出Oracle数据]]></title>
    <link href="http://icersummer.github.io/blog/2014/03/10/how-to-import-export-data-on-oracle/"/>
    <updated>2014-03-10T21:12:03-07:00</updated>
    <id>http://icersummer.github.io/blog/2014/03/10/how-to-import-export-data-on-oracle</id>
    <content type="html"><![CDATA[<p>导出数据： exp myadmin/myadmin@myinstace
(data store on c:\backup.dmp)</p>

<p>导入数据：
sqlplus / as sysdba;
(问题TBD: 为什么有的命令行可以运行并登录sqlplus / as sysdba; 而有的机器却报错，而且只能通过输入用户名密码的方式登录如：sqlplus system/password as sysdba; 区别和设置在哪里。)
create user vjtest identified by vjtest;
grant dba to vjtest;</p>

<p>imp fromuser myadmin touser vjtest file=c:\backup.dmp
(在提问中输入用户名、密码：vjtest, vjtest)</p>

<p>同一用户的话使用：imp fromuser myadmin touser myadmin file=c:\backup.dmp</p>

<p>added in Apr.16th</p>

<p>执行报错：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>D:\Users\vjia&gt;imp system/syspwd fromuser=itadmin touser=testdb file=c:\data_dmp.dmp full=y
</span><span class='line'>
</span><span class='line'>Import: Release 11.2.0.1.0 - Production on Wed Apr 16 12:33:35 2014
</span><span class='line'>
</span><span class='line'>Copyright (c) 1982, 2009, Oracle and/or its affiliates.  All rights reserved.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>IMP-00058: ORACLE error 12560 encountered
</span><span class='line'>ORA-12560: TNS:protocol adapter error
</span><span class='line'>IMP-00000: Import terminated unsuccessfully</span></code></pre></td></tr></table></div></figure>


<p>错误原因在于：</p>

<p>(参考这里)[<a href="http://www.orafaq.com/forum/t/175836/">http://www.orafaq.com/forum/t/175836/</a>]</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ORA-12560: TNS:protocol adapter error
</span><span class='line'>The database is local to the machine you try to execute this command and your ORACLE_SID is not set.
</span><span class='line'>ORA-12154: TNS:could not resolve the connect identifier specified
</span><span class='line'>The database is remote from the machine you try to execute this command and your tnsname.ora does not know the entry you gave (orclimpl)
</span><span class='line'>In first case, set ORACLE_SID; in latter one, add the entry in your tnsnames.ora (and check there is a listener on database server).</span></code></pre></td></tr></table></div></figure>


<p>解决方法就是：设置Oracle SID后再试</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>D:\Users\vjia&gt;set ORACLE_SID=scottfeb
</span><span class='line'>
</span><span class='line'>D:\Users\vjia&gt;imp system/syspwd fromuser=itadmin touser=testdb file=c:\data_dmp.dmp full=y
</span><span class='line'>
</span><span class='line'>Import: Release 11.2.0.1.0 - Production on Wed Apr 16 13:30:10 2014
</span><span class='line'>
</span><span class='line'>Copyright (c) 1982, 2009, Oracle and/or its affiliates.  All rights reserved.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Connected to: Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
</span><span class='line'>With the Partitioning, OLAP, Data Mining and Real Application Testing options
</span><span class='line'>
</span><span class='line'>Export file created by EXPORT:V11.02.00 via conventional path
</span><span class='line'>
</span><span class='line'>Warning: the objects were exported by ITADMIN, not by you
</span><span class='line'>
</span><span class='line'>import done in WE8MSWIN1252 character set and UTF8 NCHAR character set
</span><span class='line'>import server uses AL32UTF8 character set (possible charset conversion)
</span><span class='line'>. importing ITADMIN's objects into TESTDB
</span><span class='line'>. . importing table                         "TEAM"       2789 rows imported
</span><span class='line'>. . importing table                      "TEAMD"          0 rows imported
</span><span class='line'>About to enable constraints...
</span><span class='line'>Import terminated successfully with warnings.</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Find the Lost Chrome Bookmarks]]></title>
    <link href="http://icersummer.github.io/blog/2014/01/27/how-to-find-the-lost-chrome-bookmarks/"/>
    <updated>2014-01-27T00:20:38-08:00</updated>
    <id>http://icersummer.github.io/blog/2014/01/27/how-to-find-the-lost-chrome-bookmarks</id>
    <content type="html"><![CDATA[<p>how to find the lost Chrome bookmarks</p>

<hr />

<p>I don&rsquo;t know why, but one day when I open my Chrome, all the bookmarks gone. I&rsquo;m still signed in with my gmail account. I believe these bookmarks are stored locally. The last bak file I can find is 5 month ago.</p>

<p>I find a way to find a possible backup via <a href="http://productforums.google.com/forum/#!topic/chrome/EUMCNrG8J1M">Google search</a>;</p>

<blockquote><p>I found the backup version of my bookmark but it is 15 days old. Atleast I found a place there Google Chrome keeps a backup copy but it is located in some obscure folder directory.
C:\Users\NAME\AppData\Local\Google\Chrome\User Data\Default
There is a file called: Bookmarks.bak.  The sad part that i can not simply rename this file to Bookmarks aand for chrome to be back in business. One has to locate a JSON parser to parse through this JSON file into a html file for Chrome to ingest the html bookmark. I am looking around for a JSON parser into HTML then ingest this new html file into my PC chrome browser.</p></blockquote>

<p>Folder in my local is D:\Users\$name\AppData\Local\Google\Chrome\User Data\Default</p>

<p>You can find the file Bookmarks.bak with JSON format.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reset Centos Root Password]]></title>
    <link href="http://icersummer.github.io/blog/2014/01/23/reset-centos-root-password/"/>
    <updated>2014-01-23T01:43:47-08:00</updated>
    <id>http://icersummer.github.io/blog/2014/01/23/reset-centos-root-password</id>
    <content type="html"><![CDATA[<p>root和一般用户密码忘记</p>

<p>重置步骤</p>

<ol>
<li><p>重置root
<a href="http://www.centos.org/docs/4/html/rhel-sbs-en-4/s1-q-and-a-root-passwd.html">http://www.centos.org/docs/4/html/rhel-sbs-en-4/s1-q-and-a-root-passwd.html</a></p></li>
<li><p>重置普通
<a href="http://www.centos.org/docs/4/html/rhel-sbs-en-4/s1-q-and-a-forgot-user.html">http://www.centos.org/docs/4/html/rhel-sbs-en-4/s1-q-and-a-forgot-user.html</a></p></li>
</ol>


<p>参看截图：</p>

<p>step1.png</p>

<p>step2.png</p>

<p>step3.png</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test and Come on Post]]></title>
    <link href="http://icersummer.github.io/blog/2013/11/22/test-and-come-on-post/"/>
    <updated>2013-11-22T01:33:38-08:00</updated>
    <id>http://icersummer.github.io/blog/2013/11/22/test-and-come-on-post</id>
    <content type="html"><![CDATA[<p>The relationship of ExtJS, GWT  and SenCha. The detail information info can be found at  Wiki page.</p>

<p>On 15 June 2010, the merge of Ext JS with JQTouch and Rapha?l was announced[7] forming a new organisation called Sencha Inc. Ext JS continues to be available as a main product on the new Sencha website[8] together with Sencha Touch, Sencha GWT (now Sencha GXT), Sencha Architect, Sencha Animator and Ext core.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Another Post to POC]]></title>
    <link href="http://icersummer.github.io/blog/2013/11/22/another-post-to-poc/"/>
    <updated>2013-11-22T01:13:45-08:00</updated>
    <id>http://icersummer.github.io/blog/2013/11/22/another-post-to-poc</id>
    <content type="html"><![CDATA[<p>ok</p>

<p>not ok</p>

<p>hello world</p>

<p>show me your code</p>

<ul>
<li>w</li>
<li>ss</li>
<li>tu</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A First Blog in Octopress]]></title>
    <link href="http://icersummer.github.io/blog/2013/11/22/a-first-blog-in-octopress/"/>
    <updated>2013-11-22T01:09:03-08:00</updated>
    <id>http://icersummer.github.io/blog/2013/11/22/a-first-blog-in-octopress</id>
    <content type="html"><![CDATA[<p>Merge pull request #1400 from axiac/fixed-titlecase-usage</p>

<p>November 17, 2013</p>

<p>?</p>

<p>plugins</p>

<p>Merge pull request #1397 from IQAndreas/cleanup-date</p>

<p>November 18, 2013</p>

<p>?</p>

<p>sass</p>

<p>vj commit</p>

<p>November 22, 2013</p>

<p>?</p>

<p>source</p>

<p>vj commit</p>

<p>November 22, 2013</p>

<p>?</p>

<p>.editorconfig</p>

<p>Add EditorConfig file for Ruby files</p>

<p>February 26, 2012</p>

<p>?</p>

<p>.gitattributes</p>

<p>Added .gitattributes file to keep CRLF&rsquo;s out of the codebase.</p>

<p>March 05, 2013</p>

<p>?</p>

<p>.gitignore</p>

<p>added node_modules to gitignore</p>

<p>September 27, 2011</p>

<p>?</p>

<p>.powrc</p>

<p>Adding .powrc to allow RVM to work when POW is updated to version 0.4¡­</p>

<p>June 08, 2012</p>

<p>?</p>

<p>.slugignore</p>

<p>added slugignore to help with heroku deployment</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ubuntu] 怎样修改计算机名字]]></title>
    <link href="http://icersummer.github.io/blog/2013/11/06/how-to-change-ubuntu-hostname/"/>
    <updated>2013-11-06T20:25:03-08:00</updated>
    <id>http://icersummer.github.io/blog/2013/11/06/how-to-change-ubuntu-hostname</id>
    <content type="html"><![CDATA[<p>按下 Ctrl &ndash; Alt &ndash; T 组合键，打开终端。 当终端打开，输入下列命令，使用gedit编辑hostname文件</p>

<p>sudo gedit /etc/hostname</p>

<p>接下来，无论旧的计算机名字是什么，换一个新的吧。例如，如果你想要你的计算机名字为“RDOMNU”，先删除文件内容，输入 RDOMNU，然后保存文件。</p>

<p>然后，再输入下列命令来打开hosts文件</p>

<p>sudo gedit /etc/hosts</p>

<p>更改第二行箭头标记位置的值，使它与你刚才输入的计算机名字相符，完成后保存文件。</p>

<p><img src="../images/ubuntu-hostname.png" alt="Ubunbu hosts" /></p>

<p>重启，显示新的名字。</p>

<p><code>$ sudo reboot -h 0</code></p>

<p>参考链接：</p>

<ul>
<li><p><a href="http://linux.cn/thread/11846/1/1/">http://linux.cn/thread/11846/1/1/</a></p></li>
<li><p><a href="http://www.liberiangeek.net/2013/10/daily-ubuntu-tips-change-computer-name/">http://www.liberiangeek.net/2013/10/daily-ubuntu-tips-change-computer-name/</a></p></li>
</ul>

]]></content>
  </entry>
  
</feed>
